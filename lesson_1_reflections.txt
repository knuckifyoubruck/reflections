How did viewing a diff between two versions of a file help you see the bug that was introduced?
It highlighted discrepensies that may have been the cause of the conflict. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
You can build templates for future projects and save them as root branches.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?
It could automatically save after a mistake, which is useless. Manual saving gives more flexibility and precision.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?
Some files are related to others and version control systems that save automatically do not assume which are related.

How can you use the commands git log and git diff to view the history of files?
Git log shows the history of commits, git diff shows the changes between them.

How might using version control make you more confident to make changes that could break something?
It would only break the specific branch I am experimenting with, which I can easily revery back to a workable state. 
